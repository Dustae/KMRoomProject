import React, { Component } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Dimensions, StatusBar, Animated } from 'react-native';
import { ScrollView, Image } from 'react-native';
import CalendarStrip from 'react-native-calendar-strip'; //sss


const screenWidth = Dimensions.get('window').width;
const screenHeight = Dimensions.get('window').height;
const imageSize = Math.min(screenWidth, screenHeight) * 0.9;

export default class ReservationScreen extends Component {
  constructor(props) {
    super(props);
    this.state = {
      selectedDate: new Date(), // Initialize with the current date or the default selected date
    };
  }
  componentDidMount() {
    // Set the status bar visibility when the component mounts
    StatusBar.setHidden(false); // Set to false to show the status bar
  }
  handleBoxPress = (boxNumber) => {
    // Implement your logic here when a box is clicked
    // alert(`Box ${boxNumber} clicked!`);
    // Navigate to ReservationDetailsScreen
    this.props.navigation.navigate('ReservationDetails');
  };

  // Callback function to handle date selection
  handleDateSelected = (date) => {
    // Parse the date to ensure it's a Date object
    const parsedDate = new Date(date);
    this.setState({ selectedDate: parsedDate });
  };


  render() {
    const { selectedDate } = this.state;

    // Define a custom dateNumberStyle for selected dates
    const selectedDateNumberStyle = {
      color: 'orange', // You can change the color to your preference
      textDecorationLine: 'underline', // Add underline for selected dates
    };
    return (
      <ScrollView contentContainerStyle={styles.scrollViewContainer}>
        <View style={styles.container}>
          <View>
            <CalendarStrip
              scrollable
              style={{ height: screenHeight * 0.13, paddingTop: 10, paddingBottom: 10 }}
              calendarAnimation={{ type: 'sequence', duration: 10 }}
              dateNumberStyle={{ color: 'gray' }}
              dateNameStyle={{ color: 'gray' }}
              highlightDateNumberStyle={{ color: 'orange' }}
              //selectedDateNumberStyle ขีดเส้นใต้
              highlightDateNameStyle={{ color: 'orange' }}
              disabledDateNameStyle={{ color: 'grey' }}
              disabledDateNumberStyle={{ color: 'grey' }}
              calendarHeaderStyle={{ color: 'black' }}
              iconContainer={{ flex: 0.1 }}
              onDateSelected={this.handleDateSelected} // Callback for date selection
            />
            <Text style={styles.description} >Selected Date: {selectedDate ? selectedDate.toDateString() : 'None'}</Text>
          </View>
          {/* Create two boxes per row */}
          <View style={styles.boxRow}>
            <TouchableOpacity
              style={styles.box}
              onPress={() => this.handleBoxPress(1)}
            >
              <View style={styles.innerBox}>
                <View style={styles.imageContainer}>
                  <Image
                    source={require('./picture/floor1.jpg')}
                    style={styles.image}
                    resizeMode="cover"
                  />
                </View>
                <View style={styles.textContent}>
                  <Text style={styles.textbold}>5th floor libary</Text>
                  <Text style={styles.description}>Description of Room 1st goes here</Text>
                </View>
              </View>
            </TouchableOpacity>


            <View style={styles.space} />


            <TouchableOpacity
              style={styles.box}
              onPress={() => this.handleBoxPress(1)}
            >
              <View style={styles.innerBox}>
                <View style={styles.imageContainer}>
                  <Image
                    source={require('./picture/floor1.jpg')}
                    style={styles.image}
                    resizeMode="cover"
                  />
                </View>
                <View style={styles.textContent}>
                  <Text style={styles.textbold}>5th floor libary</Text>
                  <Text style={styles.description}>Description of Room 1st goes here</Text>
                </View>
              </View>
            </TouchableOpacity>
          </View>

          <View style={styles.boxRow}>
            <TouchableOpacity
              style={styles.box}
              onPress={() => this.handleBoxPress(1)}
            >
              <View style={styles.innerBox}>
                <View style={styles.imageContainer}>
                  <Image
                    source={require('./picture/floor1.jpg')}
                    style={styles.image}
                    resizeMode="cover"
                  />
                </View>
                <View style={styles.textContent}>
                  <Text style={styles.textbold}>5th floor libary</Text>
                  <Text style={styles.description}>Description of Room 1st goes here</Text>
                </View>
              </View>
            </TouchableOpacity>


            <View style={styles.space} />

            <TouchableOpacity
              style={styles.box}
              onPress={() => this.handleBoxPress(1)}
            >
              <View style={styles.innerBox}>
                <View style={styles.imageContainer}>
                  <Image
                    source={require('./picture/floor1.jpg')}
                    style={styles.image}
                    resizeMode="cover"
                  />
                </View>
                <View style={styles.textContent}>
                  <Text style={styles.textbold}>5th floor libary</Text>
                  <Text style={styles.description}>Description of Room 1st goes here</Text>
                </View>
              </View>
            </TouchableOpacity>
          </View>

        </View>
      </ScrollView>

    );
  }
}

const styles = StyleSheet.create({
  innerBox: {
    flex: 1,
  },
  space: {
    width: screenWidth * 0.08, // Adjust the width to add space between boxes
    height: screenHeight * 0.05,
  },
  boxRow: {
    flexDirection: 'row', // Arrange boxes horizontally
    justifyContent: 'space-between', // Add space between boxes
    marginBottom: 10, // Add vertical spacing between rows
  },
  box: {
    width: screenWidth * 0.4, // Adjust the width as needed
    height: screenHeight * 0.24,
    alignItems: 'center',
    justifyContent: 'center',
    borderWidth: 0,
    borderColor: '#ddd',
    borderRadius: 15,
    padding: 8, // ขอบบนรูปกับขอบกล่อง
    marginVertical: 10, // ความห่างของแต่ละกล่องบนล่าง
    backgroundColor: 'white',
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 8,
  },
  imageContainer: {
    alignItems: 'center',
    justifyContent: 'center',
  },
  textContent: {
    alignItems: 'flex-start', // Align text to the left
  },
  image: {
    width: screenWidth * 0.35, // Set the desired width
    height: screenHeight * 0.15, // Set the desired height
    borderRadius: 15,
    alignItems: 'center', // Center the image horizontally
  },
  textbold: {
    marginTop: 5,
    fontSize: screenWidth * 0.03,
    fontWeight: 'bold',
    textAlign: 'left',
  },
  description: {
    fontSize: screenWidth * 0.02, // Adjust the font size as needed
    color: 'gray', // You can adjust the color
    textAlign: 'left',
  },
  scrollViewContainer: {
    flexGrow: 1,
    alignItems: 'center',
  },
  container: {
    flex: 1,
  },
});
